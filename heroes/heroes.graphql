type Query{
    heroes: [Hero]
    hero(name: ID!): Hero
    heroByComplexity(complexity: Int!): [Hero]
}

type Hero{
    _id: ID!
    attributes: Attribute
    roles: Role
}

type Attribute{
    basestr: Int
    baseagi: Int
    baseint: Int
    strgain: Float
    agigain: Float
    intgain: Float
    attack: Attack
    defence: Defence
    mobility: Mobility
}

type Attack{
    basedmg: Float
    attacktype: String
    attackrange: Float
}

type Defence{
    basearmor: Float
    basemagicres: Float
}

type Mobility{
    basemovespeed: Float
    turnrate: Float
    daysight: Int
    nightsight: Int
}

type Role{
    carry: Int
    nuker: Int
    initiator: Int
    disabler: Int
    durable: Int
    escape: Int
    support: Int
    pusher: Int
    jungler: Int
    complexity: Int
}